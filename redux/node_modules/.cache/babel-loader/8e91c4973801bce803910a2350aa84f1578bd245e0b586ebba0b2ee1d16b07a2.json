{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport redux, { createStore } from 'redux';\nconst initialState = {\n  counter: 0,\n  isShow: true\n};\n\n// name, initialState, reducers가 필요함.\n//initialState은 초기에 이름이 같은 변수를 선언해 초기화해주면 자동으로 할당해줌\n//immer라는 패키지를 통해 자동으로 새로운 값을 만들어 반환해줌 \ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.counter++;\n    },\n    decrement: ㄴㅅ => {},\n    increase: () => {}\n  }\n});\nconst counterReducer = (state = initVal, action) => {\n  if (action.type === \"increment\") {\n    //사용하지도 않는 isShow를 업데이트해주는 이유\n    // => 업데이트를 안해주면 자동으로 isShow는 undefined가 되기 때문에 false밖에 안나옴.\n    //reducer는 기존값을 업데이트해주는 것이 아닌, 새로운 값을 반환해 줘야 됨.\n    return {\n      counter: state.counter + 1,\n      isShow: state.isShow\n    };\n  }\n  if (action.type === 'increse') {\n    return {\n      counter: state.counter + action.amount,\n      isShow: state.isShow\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      isShow: state.isShow\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      isShow: !state.isShow\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createSlice","redux","createStore","initialState","counter","isShow","name","reducers","increment","state","decrement","ㄴㅅ","increase","counterReducer","initVal","action","type","amount","store"],"sources":["/Users/yuseonjong/Desktop/React_study_bootcamp/redux/src/store/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport redux, { createStore } from 'redux'\n\n\nconst initialState = {counter:0, isShow:true}\n\n// name, initialState, reducers가 필요함.\n//initialState은 초기에 이름이 같은 변수를 선언해 초기화해주면 자동으로 할당해줌\n//immer라는 패키지를 통해 자동으로 새로운 값을 만들어 반환해줌 \ncreateSlice({\n    name:'counter',\n    initialState,\n    reducers:{\n        increment: (state) => {\n            state.counter++;\n        },\n        decrement: (ㄴㅅ) => {},\n        increase: () => {},\n    }\n})\n\nconst counterReducer = (state=initVal, action) => {\n    if(action.type === \"increment\"){\n        //사용하지도 않는 isShow를 업데이트해주는 이유\n        // => 업데이트를 안해주면 자동으로 isShow는 undefined가 되기 때문에 false밖에 안나옴.\n        //reducer는 기존값을 업데이트해주는 것이 아닌, 새로운 값을 반환해 줘야 됨.\n        return(\n            {\n                counter : state.counter +1,\n                isShow : state.isShow,\n            }\n        )\n    }\n\n    if(action.type ==='increse'){\n        return {\n            counter: state.counter + action.amount,\n            isShow : state.isShow,\n        }\n    }\n\n    if(action.type === 'decrement'){\n        return(\n            {\n                counter : state.counter -1,\n                isShow : state.isShow,\n            }\n        )\n    }\n\n    if(action.type === 'toggle'){\n        return(\n            {\n                counter: state.counter,\n                isShow : !state.isShow,\n            }\n        )\n    }\n\n    return state;\n}\n\nconst store = createStore(counterReducer);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAG1C,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAC,CAAC;EAAEC,MAAM,EAAC;AAAI,CAAC;;AAE7C;AACA;AACA;AACAL,WAAW,CAAC;EACRM,IAAI,EAAC,SAAS;EACdH,YAAY;EACZI,QAAQ,EAAC;IACLC,SAAS,EAAGC,KAAK,IAAK;MAClBA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDM,SAAS,EAAGC,EAAE,IAAK,CAAC,CAAC;IACrBC,QAAQ,EAAEA,CAAA,KAAM,CAAC;EACrB;AACJ,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGA,CAACJ,KAAK,GAACK,OAAO,EAAEC,MAAM,KAAK;EAC9C,IAAGA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IAC3B;IACA;IACA;IACA,OACI;MACIZ,OAAO,EAAGK,KAAK,CAACL,OAAO,GAAE,CAAC;MAC1BC,MAAM,EAAGI,KAAK,CAACJ;IACnB,CAAC;EAET;EAEA,IAAGU,MAAM,CAACC,IAAI,KAAI,SAAS,EAAC;IACxB,OAAO;MACHZ,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGW,MAAM,CAACE,MAAM;MACtCZ,MAAM,EAAGI,KAAK,CAACJ;IACnB,CAAC;EACL;EAEA,IAAGU,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IAC3B,OACI;MACIZ,OAAO,EAAGK,KAAK,CAACL,OAAO,GAAE,CAAC;MAC1BC,MAAM,EAAGI,KAAK,CAACJ;IACnB,CAAC;EAET;EAEA,IAAGU,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAC;IACxB,OACI;MACIZ,OAAO,EAAEK,KAAK,CAACL,OAAO;MACtBC,MAAM,EAAG,CAACI,KAAK,CAACJ;IACpB,CAAC;EAET;EAEA,OAAOI,KAAK;AAChB,CAAC;AAED,MAAMS,KAAK,GAAGhB,WAAW,CAACW,cAAc,CAAC;AAEzC,eAAeK,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}