{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dbtjs\\\\Desktop\\\\React_study_bootcamp\\\\classComponent\\\\src\\\\components\\\\Users.js\";\nimport { Component, useState } from 'react';\nimport User from './User';\nimport classes from './Users.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: 'u1',\n  name: 'Max'\n}, {\n  id: 'u2',\n  name: 'Manuel'\n}, {\n  id: 'u3',\n  name: 'Julie'\n}];\nclass Users extends Component {\n  constructor() {\n    super();\n    //클래스 컴포넌트는 상태를 객체로만 받을 수 있음.\n    this.state = {\n      showUsers: true\n    };\n  }\n  render() {\n    const toggleUsersHandler = () => {\n      //curState => 값을 전달받은 this.state\n      //클래스 컴포넌트는 상태를 overriding하지 않고, 특정 값만 바꿀 수 있음\n      //useState에선 overriding을 하기 때문에 바뀌지 않는 값도 써줘야 함.\n      this.setState(curState => {\n        return {\n          showUsers: !curState.showUsers\n        };\n      });\n    };\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: DUMMY_USERS.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? 'Hide' : 'Show', \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;","map":{"version":3,"names":["Component","useState","User","classes","jsxDEV","_jsxDEV","DUMMY_USERS","id","name","Users","constructor","state","showUsers","render","toggleUsersHandler","setState","curState","usersList","children","map","user","fileName","_jsxFileName","lineNumber","columnNumber","className","users","onClick","bind"],"sources":["C:/Users/dbtjs/Desktop/React_study_bootcamp/classComponent/src/components/Users.js"],"sourcesContent":["import { Component, useState } from 'react';\nimport User from './User';\n\nimport classes from './Users.module.css';\n\nconst DUMMY_USERS = [\n  { id: 'u1', name: 'Max' },\n  { id: 'u2', name: 'Manuel' },\n  { id: 'u3', name: 'Julie' },\n];\n\nclass Users extends Component{\n  constructor(){\n    super();\n    //클래스 컴포넌트는 상태를 객체로만 받을 수 있음.\n    this.state={\n      showUsers:true\n    }\n  }\n  \n  \n  render(){\n    const toggleUsersHandler = () => {\n      //curState => 값을 전달받은 this.state\n      //클래스 컴포넌트는 상태를 overriding하지 않고, 특정 값만 바꿀 수 있음\n      //useState에선 overriding을 하기 때문에 바뀌지 않는 값도 써줘야 함.\n      this.setState((curState) => {\n        return {showUsers : !curState.showUsers}\n      });\n    };\n    const usersList = (\n      <ul>\n        {DUMMY_USERS.map((user) => (\n          <User key={user.id} name={user.name} />\n        ))}\n      </ul>\n    );\n\n    return (\n      <div className={classes.users}>\n        <button onClick={toggleUsersHandler.bind(this)}>\n          {this.state.showUsers ? 'Hide' : 'Show'} Users\n        </button>\n        {this.state.showUsers && usersList}\n      </div>\n    );\n  }\n}\n\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AAEzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAG,CAClB;EAAEC,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAM,CAAC,EACzB;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC5B;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,CAC5B;AAED,MAAMC,KAAK,SAAST,SAAS;EAC3BU,WAAWA,CAAA,EAAE;IACX,KAAK,CAAC,CAAC;IACP;IACA,IAAI,CAACC,KAAK,GAAC;MACTC,SAAS,EAAC;IACZ,CAAC;EACH;EAGAC,MAAMA,CAAA,EAAE;IACN,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;MAC/B;MACA;MACA;MACA,IAAI,CAACC,QAAQ,CAAEC,QAAQ,IAAK;QAC1B,OAAO;UAACJ,SAAS,EAAG,CAACI,QAAQ,CAACJ;QAAS,CAAC;MAC1C,CAAC,CAAC;IACJ,CAAC;IACD,MAAMK,SAAS,gBACbZ,OAAA;MAAAa,QAAA,EACGZ,WAAW,CAACa,GAAG,CAAEC,IAAI,iBACpBf,OAAA,CAACH,IAAI;QAAeM,IAAI,EAAEY,IAAI,CAACZ;MAAK,GAAzBY,IAAI,CAACb,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;IAED,oBACEnB,OAAA;MAAKoB,SAAS,EAAEtB,OAAO,CAACuB,KAAM;MAAAR,QAAA,gBAC5Bb,OAAA;QAAQsB,OAAO,EAAEb,kBAAkB,CAACc,IAAI,CAAC,IAAI,CAAE;QAAAV,QAAA,GAC5C,IAAI,CAACP,KAAK,CAACC,SAAS,GAAG,MAAM,GAAG,MAAM,EAAC,QAC1C;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAACb,KAAK,CAACC,SAAS,IAAIK,SAAS;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEV;AACF;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAef,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}